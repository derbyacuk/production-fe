/**
 * Use to create a fluid value for a property based on the screen width.
 *
 * Sets a minimum value for the property and creates media queries and interpolated values
 * between the minimum and maximum screen sizes specified.
 *
 * @param $rule {string} The property to make dynamic, eg. 'padding-left'
 * @param $min-value {string} The minimum value for the property, eg. 8px
 * @param $max-value {string} The maximum value for the property, eg. 20px
 * @param $min-size {string} The smallest screen width, at which point the value should be equal to the min-value
 * @param $max-size {string} The largest screen width, at which point the value should equal the max-value
 */
@mixin responsive($rule, $min-value, $max-value, $min-size, $max-size) {

    $size-diff: strip-units($max-value - $min-value);
    $diff: strip-units($max-size - $min-size);

    #{$rule}: $min-value;
    
    @media screen and (min-width: $min-size) {
        #{$rule}: #{'calc(' + $min-value + ' + ' + $size-diff + ' * ((100vw - ' + $min-size + ') / ' + $diff + '))'};
    }
    
    @media screen and (min-width: $max-size) {
        #{$rule}: $max-value;
    }
}

.key-course-details-block {
    border: 10px solid $primary-blue;
    lost-column: 8/8 0;
    // start: set default intra-component spacing (units are responsive and based on em values)
    @include margin-medium;
    
    @include for-tablet-portrait-up {
        @include margin-large;
    }
    // end: set default intra-component spacing (units are responsive and based on em values)

    @include for-desktop-up {
        lost-offset: 2/16;
        lost-column: 12/16;
    }

    h2 {
        font-size: 28px;
    }

    &-inner {
        @include responsive('padding-left', 20px, 40px, 320px, 1200px);
        @include responsive('padding-right', 20px, 40px, 320px, 1200px);
        @include responsive('padding-top', 20px, 30px, 320px, 1200px);
        @include responsive('padding-bottom', 20px, 30px, 320px, 1200px);

        > div {
            display: flex;
            flex-wrap: wrap;
            lost-utility: clearfix;
        }
    }

    &-item {
        lost-column: 8/8 0;

        &:nth-child(n+2){
            margin-top: px-to-em(16, $body-font-size);
        }
    
        @include for-tablet-portrait-up {
            lost-column: 8/16 0;

            &:first-child {
                lost-column: 16/16 0;
            }

            /* every 2nd item starting at the 3rd */
            &:nth-child(2n+3) {
                margin-right: 0;
            }
        }

        @include for-tablet-landscape-up {
            lost-column: 1/3 0;

            &:first-child {
                lost-column: 16/16 0;
            }

            /* every 3rd item starting at the 2nd */
            &:nth-child(3n-1) {
                margin-right: 0;
            }
        }

        &:last-child {
            margin-bottom: 0;
        }
        
        &-p {
            font-family: $large-body-font;
            font-size: 18px;

            &:first-child {
                font-weight: bold;
                color: $primary-blue;
                margin-bottom: 0;
            }
        }
    }

    &-option {
        background: $light-grey;
        @include responsive('padding-left', 20px, 40px, 320px, 1200px);
        @include responsive('padding-right', 20px, 40px, 320px, 1200px);
        @include responsive('padding-top', 20px, 25px, 320px, 1200px);
        @include responsive('padding-bottom', 20px, 25px, 320px, 1200px);

        &-p {
            margin-bottom: px-to-em(20, $body-font-size);

            @include for-largerthan-ipad-portrait {
                margin-bottom: 0;
            }

            &:last-child {

                @include for-largerthan-ipad-portrait {
                    margin-left: auto;
                }
            }

            > a[class*='button'] {
                margin-bottom: 0;

                @include for-largerthan-ipad-portrait {
                    min-width: 240px;
                    margin-left: 10px;
                    margin-top: -10px;
                    margin-bottom: -10px;
                }
            }
        }

        &-inner {
            position: relative;
            padding-left: 35px;
            display: flex;
            flex-direction: column;
            lost-utility: clearfix;

            @include for-largerthan-ipad-portrait {
                flex-direction: row;
            }

            &:before {
                @extend %uod-icons;
                content: $uod-icons-information-icon;
                font-size: 25px;
                position: absolute;
                top: 0;
                left: 0;
                color: $primary-blue;
            }
        }
    }
}
